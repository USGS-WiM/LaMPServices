@*Comments:
03.10.13 - TR - created
*@
@*
/* Authors:
 *      Tonia Roddick (troddick@usgs.gov)
  * Copyright:
 *      2012 USGS - WiM
 * Purpose:
 *     Project Details 
 */
 *@
@using System.Configuration;
@using LaMPServices;
@using LaMPWeb;
@using LaMPWeb.Assets.Resources;

@{
    ViewBag.Title = "Project Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model LaMPServices.PROJECT
           
<script src="@Url.Content("~/Assets/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script> 

@{ 
    DATA_HOST thisHost = new DATA_HOST();
    if (ViewData.ContainsKey("dataHost"))
    {   
        List<DATA_HOST> DataHosts = ViewData["dataHost"] as List<DATA_HOST>;
        thisHost = DataHosts[0];
    }
}

<div id="loading"><div id="loadingcontent"><p id="loadingspinner" style=""><img src="@Url.Content("~/Assets/Images/loading1.gif")"  /></p></div></div>


<div id="dataTitle">                                                        
    <div class="title">Project: @Model.NAME</div>
    
    <span id="errorSection" class="failureNotification"><asp:Literal ID="ErrorMessage" runat="server"></asp:Literal></span>
</div>
<br clear="all" />

<hr class="headerUnderline" />
@*@using (Ajax.BeginForm("ScienceBaseDelete / ProjectDelete", "Project", new { id = "343" } /  new { id = Model.PROJECT_ID }, new AjaxOptions() { OnBegin = "return deleteAll()", HttpMethod = "POST", OnSuccess = "Success" }, new { id = "DeleteForm", @style = "margin-left:10px" }))*@
@Html.ActionLink("Edit Project Details", "ProjectEdit", new {id = Model.PROJECT_ID}, new {@class="LaMPButton blue", @onclick="loading();", @style="float:left"})
@using (Ajax.BeginForm("ProjectDelete", "Project", new { id = Model.PROJECT_ID }, new AjaxOptions() { OnBegin = "deleteAll", HttpMethod = "POST", OnSuccess = "Success" }, new { id = "DeleteForm", @style = "margin-left:10px" }))
{
   <div><input type="submit" class="LaMPButton blue" style="margin-left:10px" value="Delete Project" /></div>
}

<br /><br />
<div class="detailColumn">

    @*<input type="checkbox" value="0" id="flagCkBx" name="READY_FLAG" onchange="updateFlag();" />*@


    @*Show project data manager is admin is logged in *@
    @if (ViewData["Role"] == "Admin")
    {
        <div class="detailDiv">          
            <span class="bold ui-label-a">Data Manager:</span>
            <label class="inline">@ViewData["DataManager"]</label>
        </div>
    }
    
    @* Project Name: (PROJECT)*@
    <div class="detailDiv">          
        <span class="bold ui-label-a">Project Name:</span>
        <label class="inline">@Model.NAME</label>
    </div>

    @* Organizations: (PROJECT_COOPERATORS)*@
    <div class="detailDiv">
        <span class="bold ui-label-a">Organization:</span>
        <label class="inline">
            @foreach (ORGANIZATION o in ViewData["projOrgs"] as List<ORGANIZATION>)
            {  @string.Format("- {0}", o.NAME);
                                              if (o.DIVISION != null)
                                              { @string.Format(", {0}", o.DIVISION);
                                              }
                                              if (o.SECTION != null)
                                              { @string.Format(", {0}", o.SECTION);
                                              }
                <br />
            }
        </label>
    </div>
    @* Project Length: (PROJECT)*@
    <div class="detailDiv">
        <span class="bold ui-label-a">Project Duration:</span>
        <label class="inline">@ViewData["projDuration"]</label>
    </div>

    @* Project Status: (PROJECT)*@
    <div class="detailDiv">
        <span class="bold ui-label-a">Project Status:</span>
        <label class="inline">@ViewData["projStatus"]</label>
    </div>
        
    @* Project Start Date: (PROJECT)*@
    <div class="detailDiv">
        <span class="bold ui-label-a">Project Start Date:</span>
        <label class="inline">@( Model.START_DATE != null ? ((DateTime)Model.START_DATE).ToShortDateString() : "")</label>
    </div>

    @* Project End Date: (PROJECT)*@
    <div class="detailDiv">
        <span class="bold ui-label-a">Project Completion Date:</span>
        <label class="inline">@( Model.END_DATE != null ? ((DateTime)Model.END_DATE).ToShortDateString() : "")</label>
    </div>
        
    @* Project Objectives: (PROJECT_OBJECTIVES)*@
    <div class="detailDiv">
        <span class="bold ui-label-a">Project Objectives:</span>
        <label class="inline">
            @if (ViewData.ContainsKey("projObjectives"))
            {
                foreach (OBJECTIVE_TYPE ot in ViewData["projObjectives"] as List<OBJECTIVE_TYPE>)
                {  
                    @string.Format("- {0}", ot.OBJECTIVE);<br />
                }
            }
        </label>
    </div>

    @* Project Description: (PROJECT)*@
    <div class="detailDiv">
        <span class="bold ui-label-a">Project Description:</span>
        <textarea class="textAreaDetails inline" cols="30" rows="4" readonly="readonly">@Model.DESCRIPTION</textarea>
    </div>

    @* Project Keywords: (PROJECT_KEYWORDS)*@
    <div class="detailDiv">
        <span class="bold ui-label-a">Project Keywords:</span>
        <label class="inline">
            @if (ViewData.ContainsKey("projKeywords"))
            {
                foreach (KEYWORD k in ViewData["projKeywords"] as List<KEYWORD>)
                {       
                    @string.Format("- {0}", k.TERM); <br />
                }
            }
        </label>
    </div>

    @* Project Website: (PROJECT)*@
    <div class="detailDiv">
        <span class="bold ui-label-a">Project Website:</span>        
        <label class="inline">
           @if (ViewData.ContainsKey("eachURLarray"))
            {
                string[] urlarray = ViewData["eachURLarray"] as string[];
                for (var x = 0; x < urlarray.Length; x++)
                {
                    if (urlarray[x] != "") {
                     @string.Format("- {0}", urlarray[x]); <br />
                    }
                }
            }
            else
            {
                @Model.URL
            }
    </div>

    @* Additional Project Information: (PROJECT)*@
    <div class="detailDiv">
        <span class="bold ui-label-a">Additional Project Information:</span>
        <textarea class="textAreaDetails inline" cols="30" rows="4" readonly="readonly">@Model.ADDITIONAL_INFO</textarea>
    </div>

    <br clear="all" />

</div>

<div class="infoBoxColumn">

@* -------------- Info Boxes  -----------*@

    <div style="margin-bottom: 10px; margin-left: 52px; width:80%">
        <div>Click on an existing data, contact, publication, or site to modify or delete.</div>
        <div>Click on the relevant button to add new items.</div>
    </div>
    
    @{Html.RenderAction("DataInfoBox", "Data", new { id = Model.PROJECT_ID }); }
    <br />
    @{Html.RenderAction("ContactInfoBox", "Contact", new { id = Model.PROJECT_ID }); }
    <br />
    @{Html.RenderAction("PubInfoBox", "Publication", new { id = Model.PROJECT_ID }); }
    <br />
    @{Html.RenderAction("SiteInfoBox", "Site", new { id = Model.PROJECT_ID }); }
    <br />
</div>

<br clear="all" />       

<script type="text/javascript">

    function deleteAll() {
        var sure = confirm("Are you sure you want to delete this Project and all related parts?");
        if (sure) {
            $("#loading").fadeIn();
            return true;
        }
        else {
            return false
        }
    }

    function Success() {
        window.location.href = '@Url.Action("Index", "Home")';
    }

    $("#editButton").click(function () {
        $("#form0").submit();
    });       
    
    function loading() {
        $("#loading").fadeIn();
    };

    function updateFlag() {
        if ($("#flagCkBx").prop('checked')){
            //it's checked. ask if they want to flag this good to go
            var sure = confirm("Are you sure you want to flag this Project ready for the map?");
            if (sure) {
                //ajax call to PUT (READY_FLAG == 1)
                $.ajax({
                    url: '@Url.Action("ProjectFlag", "Project")',
                    type: 'POST',
                    data: { flag: 1, projectId: '@Model.PROJECT_ID' },
                    success: function (data) {
                        if (data = "success") {
                            alert('Project is now live.');
                        }
                        else {
                            alert('Problem');
                        }
                    }
                });
            }
            else {
                //uncheck and return false
                $("#flagCkBx").prop('checked', false);
                return false;
            }
        }
        else {
            //it's not checked, ask if they want to unflag it
            var sure = confirm("Are you sure you want to unflag this project?");
            if (sure) {
                //ajax call to PUT (READY_FLAG == 0)
                $.ajax({
                    url: '@Url.Action("ProjectFlag", "Project")',
                    type: 'POST',
                    data: { flag: 0, projectId: '@Model.PROJECT_ID' },
                    success: function (data) {
                        if (data = "success") {
                            alert('Project is now NOT live.');
                        }
                        else {
                            alert('Problem');
                        }
                    }
                });
            }
            else {
                //check it back on
                $("#flagCkBx").prop('checked', true);
                return false;
            }
        }
    }
</script>