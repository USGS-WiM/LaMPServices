@*Comments: 
07.17.13 - TR - Created 

*@

@*
/* Authors:
 *      Tonia Roddick (troddick@usgs.gov)
  * Copyright:
 *      2012 USGS - WiM
 * Purpose:
 *      Project Edit
 */
 *@

@using LaMPServices;
@using LaMPWeb.Models; 
@using LaMPWeb.Assets.Resources;
         
@{
    ViewBag.Title = "Edit Project";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model LaMPWeb.Models.ProjectModel

<script src="@Url.Content("~/Assets/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Assets/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Assets/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@*<div id="loading"><div id="loadingcontent"><p id="loadingspinner" style=""><img src="@Url.Content("~/Assets/Images/loading1.gif")"  /></p></div></div>*@

<style type="text/css">
    table, table td 
    {
        border: none;
    }
</style>

<script type="text/javascript">
    $(function () {
        //datepicker 
        $('input').filter('.datepicker').datepicker({
            changeMonth: true,
            yearRange: '1965:2030',
            changeYear: true
        });
    });
</script>

@{
    List<ORGANIZATION> projOrganizations = ViewData["ProjOrgs"] as List<ORGANIZATION>;
    string ProjectOrgIDs = Model.projOrgs;
    List<OBJECTIVE_TYPE> projObjectives = ViewData["projObjectives"] as List<OBJECTIVE_TYPE>;
    string ProjectObjIDs = Model.projObjectives;
    List<KEYWORD> projKeywords = ViewData["projKeywords"] as List<KEYWORD>;
    string ProjectKeywordsIDs = Model.projKeywords;
    
 }

<div id="dataTitle">
    <div class="title">Project Edit</div>
</div>
<br clear="all" />
<hr class="headerUnderline" />

<div id="loading"><div id="loadingcontent"><p id="loadingspinner" style=""><img src="@Url.Content("~/Assets/Images/loading1.gif")"  /></p></div></div>

@using (Html.BeginForm("ProjectEdit", "Project", new { id = Model.project.PROJECT_ID }, FormMethod.Post, new { @id = "form0" }))
{
    <div class="siteColumn">
       <input type="hidden" id="ProjId" name="project.PROJECT_ID" value="@Model.project.PROJECT_ID" />
       <input type="hidden" id="DataManagerID" name="project.DATA_MANAGER_ID" value="@Model.project.DATA_MANAGER_ID" />

       @* Project Name: (PROJECT)*@
        <div class="ui-grid-a">          
            <div class="ui-block-a"><span class="required">@Html.Label(ProjectStrings.ProjName_Lbl)</span></div>
            <div class="ui-block-b"><input type="text" name="project.NAME" class="required lampTextInput ui-shadow-inset" value="@Model.project.NAME" /></div>
        </div>

        <br clear="all" />
        <hr />

        <br />

        <table id="OrgTable" cellspacing="0" cellpadding="0" style="width:100%; margin-left:15px; margin-right:15px">
            <thead>
                <tr>
                    <td></td>
                    <td style="width:30%"><b>Organization</b></td>
                    <td style="width:30%"><b>Division</b></td>
                    <td style="width:30%"><b>Section</b></td>                
                </tr>
            </thead>
            <tbody>
                @{  
               int trow;
               decimal OrgID;
               for (var i = 0; i <= projOrganizations.Count - 1; i++)
               {
                   trow = i + 1;
                   OrgID = projOrganizations[i].ORGANIZATION_ID;
                            <tr id="OrgTr@(trow)">
                                <td><a onclick="RemoveLine(OrgTr@(trow),@(OrgID));"><img src="@Url.Content("~/Assets/Images/Close.fw.png")"/></a></td>
                                <td>@projOrganizations[i].NAME</td>
                                <td>@projOrganizations[i].DIVISION</td>
                                <td>@projOrganizations[i].SECTION</td>
                            </tr>
               }
                }
            </tbody>
        </table>

        <div id="MoreOrgs" class="hidden">
            @* Contact Organization: *@
            <div class="ui-grid-a">
                <div class="ui-block-a">Contact Organization:</div>
                <div class="ui-block-b">
                    <select id="OrgDD" class="lampSelectInput" name="ProjOrg">
                        <option value="0">Choose Organization</option>
			            @foreach (LaMPServices.ORGANIZATION o in ViewData["organizations"] as List<ORGANIZATION>)
               {
                            <option value='@o.ORGANIZATION_ID'>@o.NAME</option> 
               }
                    </select>
                </div>
                <div class="ui-block-c notes">After selecting your Organization (and Division/Office and Section, if applicable) in the drop-down menu, click the “Add Organization” button to save. Repeat if multiple organizations apply. Remove an organization by clicking the “X” next to the unwanted item.</div>
            </div>

            @* Add Organization (checkbox) *@
            <div class="ui-grid-a">
                <div data-role="fieldcontain">
                    <div class="ui-block-a">Add Organization:</div>
                    <div class="ui-block-b"><input type="checkbox" id="addOrgCheckBx" name="OtherOrgCB" onclick="AddOrgClick();" /></div>
                </div>
            </div>       

            @* Hidden New Organization input: *@
            <div id="NewOrgInput" class="ui-grid-a hidden">
                <div data-role="fieldcontain">
                    <div class="ui-block-a"><span class="padding">Organization Name:</span></div>
                    <div  class="ui-block-b" ><input type="text" id="NewOrgName" name="addOrgName" class="lampTextInput ui-shadow-inset" /></div>
                    <div class="ui-block-a"><span class="padding"><input type="button" onclick="ConfirmAddOrg();" name="AddOrg" value="Add to Organizations" /></span></div>
                    <br />
               </div>
            </div>

		    @* Division: *@
            <div class="ui-grid-a">
                <div class="ui-block-a"><span>Division/Office:</span></div>
                <div class="ui-block-b">
                    <select id="DivDD" class="lampSelectInput" name="division">
			          
                    </select>
                </div>
            </div>
        
            @* Add Division (checkbox): *@
            <div class="ui-grid-a">
                <div data-role="fieldcontain">
                    <div class="ui-block-a">Add Division/Office:</div>
                    <div class="ui-block-b"><input type="checkbox" id="AddDivCheckBx" name="OtherDivCB" onclick="AddDivClick();" /></div>
                </div>
            </div>

            @* Hidden New Division Input: *@
            <div id="NewDivInput" class="ui-grid-a hidden">
                <div data-role="fieldcontain">
                    <div class="ui-block-a"><span class="padding">Division Name:</span></div>
                    <div  class="ui-block-b" ><input type="text" id="DivName" name="addDivName" class="lampTextInput ui-shadow-inset" /></div>
                    <div class="ui-block-a"><span class="padding"><input type="button" onclick="ConfirmAddDiv();" name="addDivision" value="Add to Divisions" /></span></div>
                    <br />
               </div>
            </div>
        
            @*  Section: *@
            <div class="ui-grid-a">
                <div class="ui-block-a"><span>Section:</span></div>
                <div class="ui-block-b">
                   <select id="SecDD" class="lampSelectInput" name="section">
			          
                   </select>
                </div>
            </div>    
        
            @* Add Section (checkbox): *@
            <div class="ui-grid-a">
                <div data-role="fieldcontain">
                    <div class="ui-block-a">Add Section:</div>
                    <div class="ui-block-b"><input type="checkbox" id="AddSecCheckBx" name="OtherSecCB" onclick="AddSecClick();" /></div>
                </div>
            </div>
        
            @* Hidden New Section Input: *@
            <div id="NewSecInput" class="ui-grid-a hidden">
                <div data-role="fieldcontain">
                    <div class="ui-block-a"><span class="padding">Section Name:</span></div>
                    <div  class="ui-block-b" ><input type="text" id="SecName" name="addSection" class="lampTextInput ui-shadow-inset" /></div>
                    <div class="ui-block-a"><span class="padding"><input type="button" onclick="ConfirmAddSec();" name="addSection" value="Add to Sections" /></span></div>
                    <br />
               </div>
            </div>

            <div class="ui-grid-a">
                <div data-role="fieldcontain">
                    <div class="ui-block-a"><input type="button" value="Add Organization To This Project" onclick="AddOrgRow();" /></div>
                </div>
            </div>
        </div>
        
        <div id="AddMoreOrgsButton">
            <div class="ui-grid-a">
                <div data-role="fieldcontain">
                    <div class="ui-block-a"><input type="button" value="Add More Organizations To This Project" onclick="ShowAddOrg();" /></div>
                </div>
            </div>
        </div>

        @* hidden inputs to store id each Org added *@
        <input type="hidden" id="OrgIDs" name="projOrgs" value="@Model.projOrgs" />
        <input type="hidden" id="OrgIDsRemoved" name="projOrgsToRemove" />

        <br /><br />
        <br clear="all" />
        <hr />

        @* Project Start Date: (PROJECT)*@  
        <div class="ui-grid-a">           
            <div class="ui-block-a"><span class="required">@Html.Label(ProjectStrings.ProjStartDate_Lbl)</span></div>
            <div class="ui-block-b"><input type="text" id="date1" name="project.START_DATE" class="required lampSelectInput datepicker" style="width:8em" value="@( Model.project.START_DATE != null ? ((DateTime)Model.project.START_DATE).ToShortDateString() : "")" /></div>
        </div>

         @* Project End Date: (PROJECT)*@
        <div class="ui-grid-a">
             <div class="ui-block-a">@Html.Label(ProjectStrings.ProjEndDate_Lbl)</div>
             <div class="ui-block-b"><input type="text" id="date2" name="project.END_DATE" class="lampSelectInput datepicker" style="width:8em" value="@( Model.project.END_DATE != null ? ((DateTime)Model.project.END_DATE).ToShortDateString() : "")" /></div>
             <div class="ui-block-c notes">@Html.Label(ProjectStrings.Notes_EndDate_Lbl)</div>
        </div>
        
        <br clear="all" />
        <hr />

        <br />

        <table id="ObjectiveTable" cellspacing="0" cellpadding="0" style="clear:left; margin-left:15px">
            <thead>
                <tr>
                    <td style="width:3%"></td>
                    <td><b>Objectives</b></td> 
                </tr>
            </thead>
            <tbody>
                @{  if (projObjectives != null)
                    {
                        int tObjrow;
                        decimal projObjID;
                        for (var a = 0; a <= projObjectives.Count - 1; a++)
                        {
                            tObjrow = a + 1;
                            projObjID = projObjectives[a].OBJECTIVE_TYPE_ID;
                            <tr id="ObjTr@(tObjrow)">
                                <td><a onclick="RemovethisLine(ObjTr@(tObjrow), @(projObjID));"><img src="@Url.Content("~/Assets/Images/Close.fw.png")"/></a></td>
                                <td>@projObjectives[a].OBJECTIVE</td>
                            </tr>
                        }
                    }
}
            </tbody>
        </table>

        <div id="MoreObjs" class="hidden">
            @* Project Objective: (PROJECT_OBJECTIVES)*@
            <div class="ui-grid-a">
                <div data-role="fieldcontain">
                    <div class="ui-block-a">@Html.Label(ProjectStrings.ProjObj_Lbl)</div>
                    <div class="ui-block-b">
                        <select id="objectiveDD" class="lampSelectInput" name="objectives">
                            <option value="0">Choose an Objective</option>
					        @foreach (OBJECTIVE_TYPE obj in ViewData["AllObjectives"] as List<OBJECTIVE_TYPE>)
             {
                                <option value="@obj.OBJECTIVE_TYPE_ID">@obj.OBJECTIVE</option> 
             }
                        </select>
                        <br />	
                    </div>
                    <div class="ui-block-c notes">Select the objectives that best describe the purpose of your project. Select one, then click the Add Objective button. Repeat if multiple objectives apply. Remove an objective by clicking the “X” next to the unwanted item.</div>
                </div>
            </div>

            <div class="ui-grid-a">
                <div data-role="fieldcontain">
                    <div class="ui-block-a"><input type="button" value="Add Objective To This Project" onclick="AddObjectiveRow();" /></div>
                </div>
            </div>
        </div>
        
        @* hidden inputs to store id each Objective added *@
        <input type="hidden" id="objectiveIDs" name="projObjectives" value="@Model.projObjectives" />
        <input type="hidden" id="objIDsRemove" name="projObjToRemove" />
        
        <div id="AddMoreObjsButton">
            <div class="ui-grid-a">
                <div data-role="fieldcontain">
                    <div class="ui-block-a"><input type="button" value="Add More Objectives To This Project" onclick="ShowAddObjs();" /></div>
                </div>
            </div>
        </div>
        
        <br clear="all" />
        <hr />

         @* Project Description: (PROJECT)*@
       <div class="ui-grid-a">
            <div class="ui-block-a">@Html.Label(ProjectStrings.ProjDescript_Lbl)</div>
            <div class="ui-block-b"><textarea class="lampTextInput ui-shadow-inset" name="project.DESCRIPTION" rows="4" cols="30">@Model.project.DESCRIPTION</textarea></div>
            <div class="ui-block-c notes">@Html.Label(ProjectStrings.Notes_Descript_Lbl)</div>
       </div>

       
         <br clear="all" />
        <hr />
                
        <table id="KeywordTable" cellspacing="0" cellpadding="0" style="clear:left; margin-left:15px">
            <thead>
                <tr>
                    <td style="width:3%"></td>
                    <td><b>Keyword</b></td> 
                </tr>
            </thead>
            <tbody>
                @{  if (projKeywords != null)
                    {
                        int tKeyrow;
                        string projKey;
                        for (var a = 0; a <= projKeywords.Count - 1; a++)
                        {
                            tKeyrow = a + 1;
                            projKey = projKeywords[a].TERM;
                            <tr id="KeyTr@(tKeyrow)">
                                <td><a onclick="RemovethisKeyLine(KeyTr@(tKeyrow), '@(projKey)');"><img src="@Url.Content("~/Assets/Images/Close.fw.png")"/></a></td>
                                <td>@projKeywords[a].TERM</td>
                            </tr>
                        }
                    }
}
            </tbody>
        </table>

        <div id="MoreKeywords" class="hidden">
            @* Project Keywords: (PROJECT_Keywords)*@
            <div class="ui-grid-a">
                <div data-role="fieldcontain">
                    <div class="ui-block-a">@Html.Label(ProjectStrings.ProjKeywords_Lbl)</div>
                    <div class="ui-block-b"><input type="text" id="projKeyword" class="lampTextInput ui-shadow-inset" /></div>
                    <div class="ui-block-c notes">Type a keyword, then click the “Add Keyword”button. Add one at a time. Remove a keyword by clicking the “X” next to the unwanted item.</div>
                </div>
            </div>

            <div class="ui-grid-a">
                <div data-role="fieldcontain">
                    <div class="ui-block-a"><input type="button" value="Add Keyword To This Project" onclick="AddKeywordRow();" /></div>
                </div>
            </div>
        </div>
        <br /><br />
        
        @* hidden inputs to store id each Keyword added *@
        <input type="hidden" id="keywordIDs" name="projKeywords" value="@Model.projKeywords" />
        <input type="hidden" id="keywordIDsRemove" name="projKeywordsToRemove" />
        
        
        <div id="AddMoreKeywordsButton">
            <div class="ui-grid-a">
                <div data-role="fieldcontain">
                    <div class="ui-block-a"><input type="button" value="Add More Keywords To This Project" onclick="ShowAddKeywords();" /></div>
                </div>
            </div>
        </div>
       
        <br clear="all" />
        <hr />

        @* Project Website: (PROJECT)*@
        <div class="ui-grid-a">
            <div class="ui-block-a">@Html.Label(ProjectStrings.ProjWebsite_Lbl)</div>
            <div class="ui-block-b"><input type="text" name="project.URL" class="lampTextInput ui-shadow-inset" value="@Model.project.URL" /></div>
            <div class="ui-block-c notes">@Html.Label(ProjectStrings.Notes_website_Lbl)</div>
        </div>

        @* Additional Project Information: (PROJECT)*@
        <div class="ui-grid-a">
            <div class="ui-block-a">@Html.Label(ProjectStrings.ProjAddInfo_Lbl)</div>
            <div class="ui-block-b"><textarea class="lampTextInput ui-shadow-inset" name="project.ADDITIONAL_INFO" rows="4" cols="30">@Model.project.ADDITIONAL_INFO</textarea></div>
            <div class="ui-block-c notes">@Html.Label(ProjectStrings.Notes_AddInfo_Lbl)</div>
        </div>

         @* Data Management System: (DATA_HOST)*@  
        <div class="ui-grid-a">           
            <div class="ui-block-a">@Html.Label(ProjectStrings.ProjDataMngSys_Lbl)</div>
            <div class="ui-block-b"><input type="text" name="dataHost.DESCRIPTION" class="lampTextInput ui-shadow-inset" value="@Model.dataHost.DESCRIPTION" /></div>
            <div class="ui-block-c notes">@Html.Label(ProjectStrings.Notes_DataMngSys_Lbl)</div>
        </div>
        <input type="hidden" name="dataHost.DATA_HOST_ID" value="@Model.dataHost.DATA_HOST_ID" />
        <input type="hidden" name="dataHost.PROJECT_ID" value="@Model.dataHost.PROJECT_ID" />

         @* Data Hosting Entity: (DATA_HOST)*@
        <div class="ui-grid-a">
            <div class="ui-block-a">@Html.Label(ProjectStrings.ProjDataHost_Lbl)</div>
            <div class="ui-block-b"><input type="text" name="dataHost.HOST_NAME" class="lampTextInput ui-shadow-inset" value="@Model.dataHost.HOST_NAME" /></div>
            <div class="ui-block-c notes">@Html.Label(ProjectStrings.Notes_DataHost_Lbl)</div>
        </div>

         @* Data Portal URL: (DATA_HOST)*@
        <div class="ui-grid-a">          
            <div class="ui-block-a">@Html.Label(ProjectStrings.ProjDataPortal_Lbl)</div>
            <div class="ui-block-b"><input type="text" name="dataHost.PORTAL_URL" class="lampTextInput ui-shadow-inset" value="@Model.dataHost.PORTAL_URL" /> </div>
            <div class="ui-block-c notes">@Html.Label(ProjectStrings.Notes_DataPortal_Lbl)</div>
        </div>

    </div>
    
    <br clear="all" />
    <br />
    <div id="formSubmitDiv" class="formSection">
        <div class="leftSideSubmit">
            <div class="cancelDiv"><div class="lightButtonBorder"><input id="resetButton" type="reset" class="cancel" value="Cancel" onclick="stopClick();" /></div></div>
            <div class="submitDiv"><div class="darkButtonBorder"><input type="submit" name="Create" class="submit" value="Save" /></div></div>
            <span id="errorSection" class="failureNotification"><asp:Literal ID="ErrorMessage" runat="server"></asp:Literal></span>
        </div>
    </div>  
}

<script type="text/javascript">
    function stopClick() {
        var id = $("#ProjId").val();
        var answer = confirm("Continue without saving any changes?");
        if (answer) {
            $("#loading").fadeIn();
            window.location.href = '@Url.Action("ProjectDetails", "Project")' + "/" + id;
        }
    }
</script>

<script type="text/javascript">
    function loading() {
        $("#loading").fadeIn();
    }
</script>

<style type="text/css">
    .dialog_style1 .ui-widget-header
    {
        background: none repeat scroll 0 0 #4B6C9E;
    }
    .dialog_style1 .ui-widget-header
    {
        color: White;
    }
    .ui-widget
    {
        font-size: small;
    }
    .dialog_style1 .ui-state-default, .ui-state-default, .ui-widget-header .ui-state-default
    {
        color: #FFFFFF;        
        background-color: #4B6C9E;
        background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #618dcf), color-stop(100%, #4b6c9e));
        background-image: -webkit-linear-gradient(top, #618dcf, #4b6c9e);
        background-image: -moz-linear-gradient(top, #618dcf, #4b6c9e);
        background-image: -ms-linear-gradient(top, #618dcf, #4b6c9e);
        background-image: -o-linear-gradient(top, #618dcf, #4b6c9e);
        background-image: linear-gradient(top, #618dcf, #4b6c9e);
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {
        //when the organization dropdown selection changes
        $("#OrgDD").change(function () {
            // Adjust contents of Divisions dropdown based on Organization choice
            var orgId = $("#OrgDD").val();
            //clear div and sec
            $("#DivDD").val('');
            $("#SecDD").val('');
            var url = '/LaMPWeb/Contact/GetOrgDivisions/';
            $.post(url, { id: orgId }, function (data) {
                populateDD($("#DivDD"), data);
            });
        });

        function populateDD(select1, data) {
            //populate the organization division dropdown based on organization dropdown choice (data returned from GetDivisionsList)
            select1.empty();
            $.each(data, function (id, option) {
                if (option.DIVISION == null) {
                    select1.append($('<option/>', {
                        value: option.ORGANIZATION_ID,
                        text: ""
                    }));
                }
                else {
                    select1.append($('<option/>', {
                        value: option.ORGANIZATION_ID,
                        text: option.DIVISION
                    }));
                }
            });
        }

        $("#DivDD").change(function () {
            // Organization division dropdown change: Adjust contents of Section dropdown based on Division choice
            var divId = $("#DivDD").val();
            $.post("/LaMPWeb/Contact/GetDivSections/", { id: divId }, function (data) {
                populateDD1($("#SecDD"), data);
            });
        });
    });

    function populateDD1(select, data) {
        // populate section dropdown choice based on division choice (data returned from GetSectionsList)
        select.empty();
        $.each(data, function (id, option) {
            if (option.SECTION == null) {
                select.append($('<option/>', {
                    value: option.ORGANIZATION_ID,
                    text: ""
                }));
            }
            else {
                select.append($('<option/>', {
                    value: option.ORGANIZATION_ID,
                    text: option.SECTION
                }));
            }
        });
    }

    function AddOrgClick() {
        // Organizations: "Add New" checkbox. when clicked, clear selected val from dropdown (if one is selected), show empty textinput to add value to list
        var checkBoxCntrl = document.getElementById("addOrgCheckBx");
        if (checkBoxCntrl.checked == true) {
            //clear dropdown values
            $("#OrgDD").val('');
            $("#DivDD").empty();
            $("#SecDD").empty();
            //show the input fields
            $("#NewOrgInput").show();
            //make sure there's nothing in them
            $("#NewOrgName").val('');
            $("#NewOrgName").focus();
        }
        else {
            $("#NewOrgInput").hide();
        }
    }

    function ConfirmAddOrg() {
        // Organizations: show alert, ADD TO dropdown, hide text input and uncheck box
        //get new org values
        var orgName = $("#NewOrgName").val();
        if (orgName == "") {
            alert("Please enter a new Organization name.");
        }
        else {
            //hide the input area and uncheck the checkbox
            $("#NewOrgInput").hide();
            var checkboxCntrl = document.getElementById("addOrgCheckBx");
            checkboxCntrl.checked = false;
            //post the new organization to db
            $.post("/LaMPWeb/Project/AddOrganization/", { newOrgName: orgName }, function (data) {
                populateOrgDD($("#OrgDD"), data);
            });
        }
    }

    function populateOrgDD(select, data) {
        //populate organization dropdown with the full list of orgs (including 1 just added)
        select.empty();
        if (data == null) {
            alert("Invalid, please try again");
        }
        else {
            $.each(data, function (id, option) {
                select.append($('<option/>', {
                    value: option.ORGANIZATION_ID,
                    text: option.NAME
                }));
            });
            alert("New Organization added to dropdown list");
        }
    }

    function AddDivClick() {
        // Divisions: "add" checkbox. when clicked, clear selected val from dropdown (if one is selected), show empty textinput to add value to list
        var checkBoxCntrl = document.getElementById("AddDivCheckBx");
        if (checkBoxCntrl.checked == true) {
            //make sure an organization has been chosen first
            if ($("#OrgDD").val() != 0) {
                //clear the dropdown values
                $("#DivDD").empty();
                $("#SecDD").empty();
                //make sure it's empty first
                $("#DivNameInput").val('');
                //show the input fields
                $("#NewDivInput").show();
                $("#DivName").focus();
            }
            else {
                alert("Choose an Organization first");
                document.getElementById("AddDivCheckBx").checked = false;
            }
        }
        else {
            $("#NewDivInput").hide();
        }
    }

    function ConfirmAddDiv() {
        // Divisions: show alert, ADD TO dropdown, hide text input and uncheck box
        //get new div value
        var divName = $("#DivName").val();
        var orgName = $("#OrgDD option:selected").text();
        if (divName == "") {
            alert("Please enter a new Division name.");
        }
        else {
            //hide the input area and uncheck the checkbox
            $("#NewDivInput").hide();
            var checkboxCntrl = document.getElementById("AddDivCheckBx");
            checkboxCntrl.checked = false;
            //need to post the new division, and add to dropdown
            $.post("/LaMPWeb/Project/AddDivision/", { OrgName: orgName, DivName: divName }, function (data) {
                populateDivDD($("#DivDD"), data);
            });
        }
    }

    function populateDivDD(select, data) {
        //populate the division dropdown with all the divisions for chosen organization (including new one added)
        select.empty();
        if (data.Data[1].DIVISION == null) {
            alert("Invalid, please try again");
        }
        else {
            $.each(data.Data, function (id, option) {
                if (option.DIVISION == null) {
                    select.append($('<option/>', {
                        value: option.ORGANIZATION_ID,
                        text: ""
                    }));
                }
                else {
                    select.append($('<option/>', {
                        value: option.ORGANIZATION_ID,
                        text: option.DIVISION
                    }));
                }
            });
            alert("New Division added to dropdown list");
        }
    }

    function AddSecClick() {
        // Section: "add" checkbox. when clicked, clear selected val from dropdown (if one is selected), show empty textinput to add value to list 
        var checkBoxCntrl = document.getElementById("AddSecCheckBx");
        if (checkBoxCntrl.checked == true) {
            //make sure division is chosen first
            if ($("#DivDD option:selected").html() != "" && $("#OrgDD").val() != "0") {
                $("#SecDD").empty();
                //show hidden field
                $("#NewSecInput").show();
                //make sure it's empty
                $("#SecName").val('');
                $("#SecName").focus();
            }
            else {
                alert("Choose a Division first");
                document.getElementById("AddSecCheckBx").checked = false;
            }
        }
        else {
            $("#NewSecInput").hide();
        }
    }

    function ConfirmAddSec() {
        // Organization Section: show alert, ADD TO dropdown, hide text input and uncheck box 
        var sectionName = $("#SecName").val();
        var divisionName = $("#DivDD option:selected").text();
        var orgName = $("#OrgDD option:selected").text();
        if (sectionName == "") {
            alert("Please enter a new Section name.");
        }
        else {
            //hide the input area and uncheck the checkbox
            $("#NewSecInput").hide();
            var checkboxCntrl = document.getElementById("AddSecCheckBx");
            checkboxCntrl.checked = false;
            //need to post the new section, and add to dropdown
            $.post("/LaMPWeb/Project/AddSection/", { OrgName: orgName, SecName: sectionName, DivName: divisionName }, function (data) {
                populateSecDD($("#SecDD"), data);
            });
        }
    }

    function populateSecDD(select, data) {
        //populate organization section dropdown with those for given division (including one added)
        select.empty();
        if (data.Data[1].SECTION == null) {
            alert("Invalid, please try again");
        }
        else {
            $.each(data.Data, function (id, option) {
                if (option.SECTION == null) {
                    select.append($('<option/>', {
                        value: option.ORGANIZATION_ID,
                        text: ""
                    }));
                }
                else {
                    select.append($('<option/>', {
                        value: option.ORGANIZATION_ID,
                        text: option.SECTION
                    }));
                }
            });
            alert("New Section added to dropdown list");
        }
    }

    //Add Organization to Project Click method. add to the table below, add id to hidden div (can have multiple adds)
    var trID;
    function AddOrgRow() {
        var OrgID = $("#OrgDD").val();
        if (OrgID == 0) {
            alert("Choose an Organization first");
        }
        else {
            var orgName = $("#OrgDD option:selected").text();
            var OrgDivID = $("#DivDD").val();
            var OrgDivName = $("#DivDD option:selected").text();
            var OrgSecID = $("#SecDD").val();
            var orgSecName = $("#SecDD option:selected").text();
            var thisRow = $("#OrgTable tr").length;
            trID = "OrgTr" + thisRow;
            $("#OrgTable > tbody:last").append('<tr id=' + trID + '><td><a onclick="RemoveLine(' + trID + ', ' + OrgDivID + ', ' + OrgSecID + ')"><img src="@Url.Content("~/Assets/Images/Close.fw.png")"/></a></td><td>' + orgName + '</td><td>' + OrgDivName + '</td><td>' + orgSecName + '</td></tr>');
            //store id's to pass to controller. see if any IDs in there yet
            if ($("#OrgIDs").val() == "") {
                //see if section was added - use that id, else use the division id because even if none was chosen will be same as org id chosen
                if (OrgSecID != null) { $("#OrgIDs").val(OrgSecID); }
                else { $("#OrgIDs").val(OrgDivID); }
            }
            else {
                if (OrgSecID != null) { $("#OrgIDs").val($("#OrgIDs").val() + "," + OrgSecID); }
                else { $("#OrgIDs").val($("#OrgIDs").val() + "," + OrgDivID); }
            }
        }
    }

    function RemoveLine(trID, OrgDivID, OrgSecID) {
        //remove the row
        $("#" + trID.id + "").remove();
        //remove id from hidden field and add to hidden input holding removed id's. Find which one to use first
        if (OrgSecID != null) {
            $("#OrgIDs").val($("#OrgIDs").val().replace(OrgSecID, "")); 
            if ($("#OrgIDsRemoved").val() == "") {
                $("#OrgIDsRemoved").val(OrgSecID);
            }
            else {
                $("#OrgIDsRemoved").val($("#OrgIDsRemoved").val() + ", " + OrgSecID);
            }         
        }
        else {
            $("#OrgIDs").val($("#OrgIDs").val().replace(OrgDivID, ""));
            if ($("#OrgIDsRemoved").val() == "") {
                $("#OrgIDsRemoved").val(OrgDivID);
            }
            else {
                $("#OrgIDsRemoved").val($("#OrgIDsRemoved").text() + ", " + OrgDivID);
            }
        }        
    }

    //Add Objective to Project Click method. add to the table below, add id to hidden div (can have multiple adds)
    var trowID;
    function AddObjectiveRow() {
        var ObjID = $("#objectiveDD").val();
        if (ObjID == 0) {
            alert("Choose an Objective first");
        }
        else {
            var ObjName = $("#objectiveDD option:selected").text();
            $("#objectiveDD").val("");
            var thisRow = $("#ObjectiveTable tr").length;
            trowID = "ObjTr" + thisRow;
            $("#ObjectiveTable > tbody:last").append('<tr id=' + trowID + '><td><a onclick="RemovethisLine(' + trowID + ', ' + ObjID + ')"><img src="@Url.Content("~/Assets/Images/Close.fw.png")"/></a></td><td>' + ObjName + '</td></tr>');
            //store id's to pass to controller. see if any IDs in there yet
            if ($("#objectiveIDs").val() == "") {
                $("#objectiveIDs").val(ObjID);
            }
            else {
                $("#objectiveIDs").val($("#objectiveIDs").val() + "," + ObjID);
            }
        }
    }

    function RemovethisLine(trowID, ObjID) {
        //remove the row
        $("#" + trowID.id + "").remove();
        //remove id from hidden field, and add to removedid field
        $("#objectiveIDs").val($("#objectiveIDs").val().replace(ObjID, ""));
        if ($("#objIDsRemove").val() == "") {
            $("#objIDsRemove").val(ObjID);
        }
        else {
            $("#objIDsRemove").val($("#objIDsRemove").val() + ", " + ObjID);
        }         
    }


    //Add Keyword to Project Click method. add to the table below, add id to hidden div (can have multiple adds)
    var tKeyRowID;
    function AddKeywordRow() {
        var keyword = $("#projKeyword").val();
        var formatKeyword = "'" + keyword + "'";
        if (keyword == "") {
            alert("Type a Keyword first");
        }
        else {
            $("#projKeyword").val("");
            var thisRow = $("#KeywordTable tr").length;
            tKeyRowID = "KeyTr" + thisRow;
            $("#KeywordTable > tbody:last").append('<tr id=' + tKeyRowID + '><td><a onclick="RemovethisKeyLine(' + tKeyRowID + ', ' + formatKeyword + ')"><img src="@Url.Content("~/Assets/Images/Close.fw.png")"/></a></td><td>' + keyword + '</td></tr>');
            //store id's to pass to controller. see if any IDs in there yet
            if ($("#keywordIDs").val() == "") {
                $("#keywordIDs").val(keyword);
            }
            else {
                $("#keywordIDs").val($("#keywordIDs").val() + "," + keyword);
            }
        }
    }

    function RemovethisKeyLine(tKeyRowID, keyword) {
        //remove the row
        $("#" + tKeyRowID.id + "").remove();
        //remove id from hidden field, and add to removedid field
        $("#keywordIDs").val($("#keywordIDs").val().replace(keyword, ""));
        if ($("#keywordIDsRemove").val() == "") {
            $("#keywordIDsRemove").val(keyword);
        }
        else {
            $("#keywordIDsRemove").val($("#keywordIDsRemove").val() + ", " + keyword);
        }
    }

    function ShowAddOrg() {
        $("#AddMoreOrgsButton").hide();
        $("#MoreOrgs").show();
    }

    function ShowAddObjs() {
        $("#AddMoreObjsButton").hide();
        $("#MoreObjs").show();
    }

    function ShowAddKeywords() {
        $("#AddMoreKeywordsButton").hide();
        $("#MoreKeywords").show();
        $("#projKeyword").focus();
    }

    $("#form0").submit(function () {
        var MISSING = "ui-req";
        var SelMISSING = "ui-Sel-req";

        var requiredInput = $('input[class*="required"]');
        var requiredSelect = $('select[class*="required"]');
        var requiredTextArea = $('textarea[class*="required"]');
        var Ierr = false;
        var Serr = false;
        var Terr = false;
        var missingMsg = "The highlighted fields are required.";

        // Reset the previously highlighted form inputs  
        requiredInput.each(function (index) {
            $(this).removeClass(MISSING);
            $(this).addClass("ui-shadow-inset");
        });
        // Reset the previously highlighted form selects  
        requiredSelect.each(function (index) {
            $(this).removeClass(MISSING);
            $(this).addClass("ui-shadow-inset");
        });
        // Reset the previously highlighted form textareas  
        requiredTextArea.each(function (index) {
            $(this).removeClass(MISSING);
            $(this).addClass("ui-shadow-inset");
        });
        // Perform form validation  
        requiredInput.each(function (index) {
            if ($(this).val() == null || $(this).val() == "") {
                $(this).addClass(MISSING);
                $(this).removeClass("ui-shadow-inset");
                Ierr = true;
                //                $("#errorSection").append(missingMsg);
            }
        });
        // Perform form validation  
        requiredSelect.each(function (index) {
            var ind = $(this).context.selectedIndex;
            if (ind == -1) {
                $(this).addClass(MISSING);
                Serr = true;
                //                $("#errorSection").append(missingMsg);
            }
        });
        // Perform form validation  
        requiredTextArea.each(function (index) {
            if ($(this).val() == null || $(this).val() == "") {
                $(this).addClass(MISSING);
                $(this).removeClass("ui-shadow-inset");
                Terr = true;
                //                $("#errorSection").append(missingMsg);
            }
        });
        if (Ierr == true || Serr == true || Terr == true) {
            $("#errorSection").append(missingMsg);
            return false;
        }
        else {
            loading();
            return true;
        }
    });

</script>
